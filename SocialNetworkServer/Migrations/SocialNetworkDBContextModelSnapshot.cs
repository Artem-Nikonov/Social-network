// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialNetworkServer.SocNetworkDBContext;

#nullable disable

namespace SocialNetworkServer.Migrations
{
    [DbContext(typeof(SocialNetworkDBContext))]
    partial class SocialNetworkDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SocialNetworkServer.Models.Page", b =>
                {
                    b.Property<int>("PageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserAccountId")
                        .HasColumnType("int");

                    b.HasKey("PageId");

                    b.ToTable("Pages");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Page");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("SocialNetworkServer.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PostText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PostId");

                    b.HasIndex("PageId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("SocialNetworkServer.Models.Subscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PageId")
                        .HasColumnType("int");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.HasKey("SubscriptionId");

                    b.HasIndex("PageId");

                    b.HasIndex("SubscriberId");

                    b.ToTable("Subscription");
                });

            modelBuilder.Entity("SocialNetworkServer.Models.UserAccount", b =>
                {
                    b.Property<int>("UserAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserAccountId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("SocialNetworkServer.Models.CommunityPage", b =>
                {
                    b.HasBaseType("SocialNetworkServer.Models.Page");

                    b.Property<string>("PageName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Thematics")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasIndex("UserAccountId");

                    b.HasDiscriminator().HasValue("CommunityPage");
                });

            modelBuilder.Entity("SocialNetworkServer.Models.UserPage", b =>
                {
                    b.HasBaseType("SocialNetworkServer.Models.Page");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserSurname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasIndex("UserAccountId")
                        .IsUnique()
                        .HasDatabaseName("IX_Pages_UserAccountId1");

                    b.HasDiscriminator().HasValue("UserPage");
                });

            modelBuilder.Entity("SocialNetworkServer.Models.Post", b =>
                {
                    b.HasOne("SocialNetworkServer.Models.Page", "Page")
                        .WithMany("Posts")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Page");
                });

            modelBuilder.Entity("SocialNetworkServer.Models.Subscription", b =>
                {
                    b.HasOne("SocialNetworkServer.Models.Page", "Page")
                        .WithMany("Subscriptions")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SocialNetworkServer.Models.UserPage", "Subscriber")
                        .WithMany()
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Page");

                    b.Navigation("Subscriber");
                });

            modelBuilder.Entity("SocialNetworkServer.Models.CommunityPage", b =>
                {
                    b.HasOne("SocialNetworkServer.Models.UserAccount", "UserAccount")
                        .WithMany("Communities")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("SocialNetworkServer.Models.UserPage", b =>
                {
                    b.HasOne("SocialNetworkServer.Models.UserAccount", "UserAccount")
                        .WithOne("UserPage")
                        .HasForeignKey("SocialNetworkServer.Models.UserPage", "UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Pages_Accounts_UserAccountId1");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("SocialNetworkServer.Models.Page", b =>
                {
                    b.Navigation("Posts");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("SocialNetworkServer.Models.UserAccount", b =>
                {
                    b.Navigation("Communities");

                    b.Navigation("UserPage")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
